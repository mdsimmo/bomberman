# -------------------------------------------------------------------- #
#                                                                      #
#                    BOMBERMAN DEFAULT MESSAGES                        #
#                                                                      #
#   This file contains the default messages.                           #
#   You can overwrite anything by setting the value in messages.yml    #
#                                                                      #
#   Refer to the Bomberman wiki for help on configuring messages:      #
#       https://github.com/mdsimmo/bomberman/wiki/Localisation         #
#                                                                      #
#   This file is automatically generated and will be reset on next     #
#   server reload.                                                     #
#                                                                      #
# -------------------------------------------------------------------- #

format:
  # How a basic message looks
  # {message}: the message being sent
  message: '{#green|[Bomberman]} {message}'
  # How to format an item by default
  # {item}: the item to format
  item: '{item|amount}x{item|type}'  
  # How to format a heading
  # {arg0}: The title
  heading: '{#raw}{#yellow|--------} {arg0} {#yellow|---------------}'
  # How to format a list of key-value pairs
  # {arg0}: the maps key
  # {arg1} the map's value
  map: "{#raw}{#switch|{arg1}||| {#gold|{arg0}:} {arg1}}"
  # How to display a list
  # {arg0}: the value of the list
  list: "{#raw}{#switch|{arg0}||| {#gold|*} {arg0}}"
  # How code/commands are formatted
  # {arg0}: the code
  code: '{#gray|{#italic|{arg0}}}'
  # How errors are displayed
  # {arg0}: the error
  error: '{#red|{arg0}}'
  # How names of things are displayed
  # {arg0}: the name
  name: '{#italic|{arg0}}'
  # How quotes should be formatted
  # {arg0}: the code
  quote: "'{arg0}'"

# Format shortcodes
heading: '{#|format.heading|{arg0}}'
map: '{#|format.map|{arg0}|{arg1}}'
list: '{#|format.list|{arg0}}'
code: '{#|format.code|{arg0}}'
error: '{#|format.error|{arg0}}'
name: '{#|format.name|{arg0}}'
quote: '{#|format.quote|{arg0}}'

game-play:
  # Informs all the other players not involved that a player died
  # {player}: the player who died
  player-killed: '{#|name|{player}} is out!'
  # The winning text message
  # {player}: the winner
  player-won: '{#title|{#gold|WIN!}||0|60|20}'
  # Sent as the game timer counts down. Called every second
  # {time}: the time till the game begins
  count: '{#title|{#yellow|{time}}||0|17|2}'
  # Sent when the game starts
  started: '{#title|{#white|GO!}||0|20|2}'
# All messages that can be displayed when executing a command.
# Most messages have a {command} argument (TODO: which ones?)
command:
  # How to display command help
  # {command}: The command
  help: |-
    {#|heading|Help: {command|name}}
    {command|description}
    {#|map|Usage|{#|code|{command|usage}}}
    {#|map|Extra|{command|extra}}
    {#|map|Example|{command|example}}
    {#|map|Flags|{#switch|{command|flags|length}|0|| }}
    {command|flags|foreach|{!#|map|   -{it|name}{#switch|{it|ext}|||={it|ext}}|{it|description}}|
    }
  # Shown when a player tries to run a command they do not have permission to use
  deny-permission: '{#|error|You do not have permission to use {#|code|/{command|path}}}'
  # Shown when the player uses a command incorrectly
  # {attempt}: the list of arguments that the player typed
  incorrect-usage: '{#|error|Incorrect usage. For help, type: {#|code|/{command|path} -?}}'
  # Shown when a player types a command that does not exist
  # {attempt}: the cmd that the player typed
  unknown-command: '{#|error|Unknown command: {#|quote|{attempt}}}'
  # Shown to the console when it tries to run a command that needs to be done as a player
  must-be-player: You must be a player
  # Shown when a command uses a target selector, but the selecting is invalid
  # {selector}: the string of what they typed
  invalid-target-selector: '{#|error|{#|quote|{selector}} is invalid}'
  # Shown when a command needs a number but they typed something else
  # {number}: the string of what they typed (this will _not_ be a number)
  invalid-number: '{#|error|{#|quote|{number}} is not a valid number}'
  # Called when a command is cancelled for an unknown reason
  cancelled: Operation cancelled
  # The base command details
  bomberman:
    description: Main command for Bomberman
  # Details for commands which group other commands
  group:
    help: |-
      {#|heading|Help: {command|name}}
      {command|children|sort|{!it|name}|filter|{!sender|haspermission|{it|permission}}|foreach|{!#|map|{it|name}|{#switch|{=|{#len|{it|description}}>40}|1|{#sub|{it|description}|0|40}...|{it|description}}}|
      }
    usage: '/{command|path} <subcommand>'
    example: ''
    extra: ''
  # Commands relating to '/bm start'
  start:
    name: start
    description: Start a game
    usage: /{command|path} <game>
    example: ''
    extra: ''
    flags:
      d:
        description: 'The delay in seconds (default=3)'
        ext: '<delay>'
      o:
        description: 'Override existing timers (default=false)'
    # Message when a player starts an already started arena
    # {game}: the game attempted to be started
    already-started: Game {#|name|{game}} already started
    # Called if game start was called when a timer was already running
    # {game}: the game attempted to be started
    # {time}: the time remaining
    already-counting: Game {#|name|{game}} already counting
    # Called if game start was called when no players had joined
    # {game}: the game attempted to be started
    no-players: Game {#|name|{game}} has no players
    # The game has been started
    # {game}: the game that has been started
    success: Game {#|name|{game}} starting
  # Messages relating to '/bm stop'
  stop:
    name: stop
    description: Stop a game
    usage: /{command|path} <game>
    example: ''
    extra: ''
    # The game hasn't been started so the game cannot be stopped
    # {game}: the game
    not-started: Game {#|name|{game}} hasn't started
    # The game has stopped
    # {game}: the game
    success: Game {#|name|{game}} stopped
    # The timer stopped
    # {game}: the game
    # {time}: time before it would have started
    timer-stopped: Timer cancelled
  # Commands Relating to /bm reload
  reload:
    name: reload
    description: Reloads the config file and resets the arena
    usage: /{command|path} <game>
    example: ''
    extra: ''
    # The game has been reloaded
    # {game}: the game
    success: Game {#|name|{game}} reloaded
    # Error while loading
    # {game}: the old game's name (not an actual game)
    cannot-load: Error reloading the game's save file
  configure:
    name: configure
    description: Configure game's settings
    usage: /{command|path} <game>
    example: ''
    extra: '{#gray|{#italic|Creative users only}}'
    # If player tries to edit when not in creative
    # {player}: the player
    prompt-creative: '{#|error|You must be in creative}'
    # Various labels in the pop-up menu (no args)
    title:
      main: 'Game Settings'
      general: 'General Settings'
      blocks: 'Block Settings'
      loot: 'Block Loot Table'
      inventory: 'Starting Kit'
    back: 'Menu'
    blocks:
      destructible:
        name: 'Destructible'
        description: 'Semi-solid blocks'
      indestructible:
        name: 'Indestructible'
        description: 'Solid blocks default'
      pass-destroy:
        name: 'Pass Destroy'
        description: 'Non solid blocks default'
      pass-keep:
        name: 'Pass keep'
        description: 'Fire passes through without changing'
    general:
      lives: Lives
      fuse-ticks: Fuse ticks
      fire-ticks: Fire ticks
      immunity-ticks: Immunity ticks
      tnt-block: TNT Block
      fire-item: Fire Item
    loot:
      slot: "Block Group {=|{slot}+1}"
      block: Block Types
      item: Drop
      weight: Weighting
  # Messages relating to '/bm create'
  create:
    name: create
    description: |-
      Builds a Bomberman game. Use one of {#|code|-g}, {#|code|-t}, {#|code|-s} or {#|code|-w} to select what to build.
    usage: /{command|path} <name> [options]
    example: /{command|path} mygame -t=purple
    extra: 'Custom schematics need all spawns marked by writing {#|code|[spawn]} on signs.'
    flags:
      s:
        description: Build using a World Edit schematic
        ext: '<file>'
      t:
        description: Specify a template game to duplicate
        ext: '<file>'
      g:
        description: Specify an existing game to copy
        ext: '<game>'
      w:
        description: Uses the current World Edit wand selection.
    # The game's name is already used
    # {game}: the game that has the shared name
    game-exists: Game {#|name|{game}} already exists
    # The game's file name conflicts with an already existing game
    # {game}: the name of the game that tried to be created
    # {file}: the filename in conflict
    file-conflict: Game {#|name|{game}} conflicts with file {#|quote|{file}}
    # The referenced file name could not be found
    # {file}: the file (including path) that does not exist
    # {filename}: just the filename
    file-not-found: Can not find {#|quote|{file}}
    # The game was built successfully
    # {game}: the game that was built
    success: Game {#|name|{game}} created{#switch|{game|spawns}|0| but has no spawns. Did you mark spawns with "[spawn]"?}
    # An exception was thrown while building
    # {error}: the error message
    error: |-
      {#|error|Build Error: {#|quote|{error}}
      See console for details. Game creation may be incomplete.
      Was the schematic made in a different WorldEdit version?}
    # Player needs to use WorldEdit to select something to create the game from
    need-selection: Use wooden axe to select a region first
    # The requested schematic was not found
    # {schema}: the file name that was attempted
    schema-not-found: '{#red|Schematic not found: {#italic|{schema}}}'
  # Messages relating to '/bm delete'
  delete:
    name: delete
    description: Deletes a game
    usage: /{command|path} <game>
    example: ''
    extra: ''
    # The game has been deleted
    # {game}: the game that was deleted (this is still a game object)
    success: Game {#|name|{game}} destroyed
  # Messages relating to '/bm undo'
  undo:
    name: undo
    description: Reverts the schematic to its pre-create state and deletes the game (if not already deleted)
    usage: /{command|path} <game>
    example: ''
    extra: Can only undo games built in the last 10 minutes. Does not work for games built with a wand.
    # The game arena was restored to previous state
    # {game}: the game name that was reset (NOT a valid object; it is just the name)
    success: Game {#|name|{game}} schematic reverted
    # The game was deleted
    # {game}: the game that was deleted (this is a game object)
    deleted: Game {#|name|{game}} deleted
    # Game was not in the memory
    # {game}: the game name requested (NOT a valid game)
    unknown-game: No previous state of {#|name|{game}} stored - was it created more than 10 minutes ago or by using a wand?
  # Messages relating to '/bm list'
  list:
    name: list
    description: Shows all existing games
    usage: /{command|path}
    example: ''
    extra: ''
    # The displayed message
    # {games}: a list of games
    games: |-
      {#|heading|Games}
      {#switch|{games|length}|0|{#red|No games present}|{games|sort|{!it|name}|foreach|{!#|map|{it|name}|{it|players}/{it|spawns} ({#switch|{it|running}|true|Running|false|Waiting|{#red|?}})}|
      }}
  # Messages relating to '/bm info'
  info:
    name: info
    description: Show information about a game
    usage: /{command|path} <game>
    example: ''
    extra: ''
    # What info to display about a game
    # {game}: the game
    details: |-
      {#|heading|Info: {game|name}}
      {#|map|Status|{#switch|{game|running}|true|Playing|false|Waiting|{#red|?}}}
      {#|map|Players|{game|players}/{game|spawns}}
      {#|map|Init lives|{game|lives}}
      {#|map|Init bombs|{game|bombs}}
      {#|map|Init power|{game|power}}
      {#|map|Location|({game|x}, {game|y}, {game|z})}
      {#|map|Schema|{game|schema|name}}
      {#|map|Size|[{game|schema|xsize}x{game|schema|ysize}x{game|schema|zsize}]}

  # Commands relating to '/bm join'. Also see 'join.xxx' messages
  join:
    name: join
    description: Join a game
    usage: /{command|path} <game>
    example: ''
    extra: ''
    flags:
      t:
        description: Target selector to apply command to. All standard minecraft selectors work, but only players can be selected. This flag requires additional permissions.
        ext: "<selector>"
    # The game has no spare spawn points
    # {game}: the game attempted to be joined
    game-full: Game {#|name|{game}} is full
    # Cannot join because the game has already started
    # {game}: the game that couldn't be joined
    game-started: 'Game has already started'
    # Player tried to join a game when they are already playing a game
    # {game}: the game that couldn't be joined
    # {player}: the player joining
    already-joined: 'You are already part of a game'
    # A player has joined the game. Sent to all observers of a game
    # {game}: the game joined
    # {player}: the player who joined
    success: '{#|name|{player}} joined game {#|name|{game}}{#switch|{=|{game|players}=={game|spawns}}|1|{#exec|bm start {game} -d=10}}'
  # Messages relating to '/bm leave'
  leave:
    name: leave
    description: Leave the game
    usage: /{command|path}
    example: ''
    extra: ''
    flags:
      t:
        description: Target selector to apply command to. All standard minecraft selectors work, but only players can be selected. This flag requires additional permissions.
        ext: "<selector>"
    # The player is not part of any game
    # {player}: player who isn't joined
    not-joined: You're not part of a game
    # Player left successfully
    # {player}: the player that left
    success: '{#gray|{#italic|{#|name|{player}} left game}}{#switch|{=|{game|players}==0}|1|{#exec|bm stop {game}}}'